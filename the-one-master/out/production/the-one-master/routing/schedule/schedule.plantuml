@startuml

title __SCHEDULE's Class Diagram__\n

  namespace routing {
    namespace schedule {
      class routing.schedule.ScheduleDijkstra {
          {static} - INFINITY : Double
          {static} - PQ_INIT_SIZE : int
          - prevHops : Map<Integer, ScheduleEntry>
          - unvisited : Queue<Integer>
          - visited : Set<Integer>
          + ScheduleDijkstra()
          + getShortestPath()
          - initWith()
          - relax()
          - setTime()
      }
    }
  }
  

  namespace routing {
    namespace schedule {
      class routing.schedule.ScheduleDijkstra.DurationComparator {
          + compare()
      }
    }
  }
  

  namespace routing {
    namespace schedule {
      class routing.schedule.ScheduleDijkstra.TimeMap {
          - map : HashMap<Integer, Double>
          + TimeMap()
          + get()
          + put()
          + toString()
      }
    }
  }
  

  namespace routing {
    namespace schedule {
      class routing.schedule.ScheduleEntry {
          - delta : double
          - duration : double
          - from : int
          {static} - serialVersionUID : long
          - time : double
          - to : int
          - usageCount : int
          - via : int
          + ScheduleEntry()
          + getDelta()
          + getDestinationTime()
          + getDuration()
          + getFrom()
          + getTime()
          + getTo()
          + getUsageCount()
          + getVia()
          + increaseUsageCount()
          + setDelta()
          + toString()
      }
    }
  }
  

  namespace routing {
    namespace schedule {
      class routing.schedule.ScheduleOracle {
          ~ schedules : Map<Integer, List<ScheduleEntry>>
          {static} - serialVersionUID : long
          + ScheduleOracle()
          + addEntry()
          + addEntry()
          + getConnected()
          + getEntries()
      }
    }
  }
  

  routing.schedule.ScheduleDijkstra o-- routing.schedule.ScheduleOracle : oracle
  routing.schedule.ScheduleDijkstra o-- routing.schedule.ScheduleDijkstra.TimeMap : times
  routing.schedule.ScheduleDijkstra +-down- routing.schedule.ScheduleDijkstra.DurationComparator
  routing.schedule.ScheduleDijkstra +-down- routing.schedule.ScheduleDijkstra.TimeMap
  routing.schedule.ScheduleDijkstra.DurationComparator .up.|> java.util.Comparator
  routing.schedule.ScheduleEntry .up.|> java.io.Serializable
  routing.schedule.ScheduleOracle .up.|> java.io.Serializable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
