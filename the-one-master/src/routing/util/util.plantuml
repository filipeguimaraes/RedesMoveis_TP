@startuml

title __UTIL's Class Diagram__\n

  namespace routing {
    namespace util {
      class routing.util.EnergyModel {
          {static} + ENERGY_VALUE_ID : String
          {static} + INIT_ENERGY_S : String
          {static} + SCAN_ENERGY_S : String
          {static} + SCAN_RSP_ENERGY_S : String
          {static} + TRANSMIT_ENERGY_S : String
          {static} + WARMUP_S : String
          - currentEnergy : double
          - initEnergy : double[]
          - lastUpdate : double
          {static} - rng : Random
          - scanEnergy : double
          - scanResponseEnergy : double
          - transmitEnergy : double
          - warmupTime : double
          + EnergyModel()
          + getEnergy()
          + moduleValueChanged()
          + reduceDiscoveryEnergy()
          + replicate()
          + update()
          # EnergyModel()
          # reduceEnergy()
          # setEnergy()
      }
    }
  }
  

  namespace routing {
    namespace util {
      class routing.util.MessageTransferAcceptPolicy {
          {static} + FROM_RPOLICY_S : String
          {static} + FROM_SPOLICY_S : String
          {static} + HOPCOUNT_RPOLICY_S : String
          {static} + HOPCOUNT_SPOLICY_S : String
          {static} + MCBACR_S : String
          {static} + MCBACS_S : String
          {static} + MCBCVR_S : String
          {static} + MCBCVS_S : String
          {static} + MTA_POLICY_NS : String
          {static} + NROF_MCBCS_S : String
          {static} + TO_ME_VALUE : int
          {static} + TO_RPOLICY_S : String
          {static} + TO_SPOLICY_S : String
          - fromReceivePolicy : Range[]
          - fromSendPolicy : Range[]
          - recvConditions : ArrayList<Tuple<String, ArithmeticCondition>>
          - sendConditions : ArrayList<Tuple<String, ArithmeticCondition>>
          - toReceivePolicy : Range[]
          - toSendPolicy : Range[]
          + MessageTransferAcceptPolicy()
          + acceptReceiving()
          + acceptSending()
          - addConditions()
          - addMCBCs()
          - checkHopCountPolicy()
          - checkMcbConditions()
          - checkSimplePolicy()
      }
    }
  }
  

  namespace routing {
    namespace util {
      class routing.util.RoutingInfo {
          - moreInfo : List<RoutingInfo>
          - text : String
          + RoutingInfo()
          + RoutingInfo()
          + addMoreInfo()
          + getMoreInfo()
          + toString()
      }
    }
  }
  

  routing.util.EnergyModel .up.|> core.ModuleCommunicationListener
  routing.util.EnergyModel o-- core.ModuleCommunicationBus : comBus
  routing.util.MessageTransferAcceptPolicy o-- core.ArithmeticCondition : hopCountReceivePolicy
  routing.util.MessageTransferAcceptPolicy o-- core.ArithmeticCondition : hopCountSendPolicy


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
